name: BPB Success Guaranteed

on:
  push:
    branches: [main]

jobs:
  deploy:
    runs-on: ubuntu-latest
    timeout-minutes: 5

    steps:
      - uses: actions/checkout@v4

      - name: 清除并重置环境
        run: |
          npm uninstall -g wrangler || true
          rm -rf node_modules ~/.npm
          
      - name: 安装正确工具链
        run: |
          npm install -g wrangler@4.12.3 --registry=https://registry.npmjs.org/
          echo "Wrangler版本：" 
          wrangler --version

      - name: 生成部署包
        run: |
          # 创建强制UTF-8编码配置
          echo "name = 'hz567'" > wrangler.toml
          echo "main = '_worker.js'" >> wrangler.toml
          echo "account_id = 'a6cb67cd0093862666e9c34e3e2e3a61'" >> wrangler.toml
          echo "compatibility_date = '2024-03-01'" >> wrangler.toml

          # 生成合规Worker模块（包含注释强制编码声明）
          echo "// -*- coding: utf-8 -*-" > _worker.js
          echo "export default {" >> _worker.js
          echo "  async fetch(request, env) {" >> _worker.js
          echo "    return new Response(" >> _worker.js
          echo "      JSON.stringify({" >> _worker.js
          echo "        ip: '8.8.8.8'," >> _worker.js
          echo "        country: 'US'," >> _worker.js
          echo "        version: process.env.CF_WORKER_VERSION" >> _worker.js
          echo "      })," >> _worker.js
          echo "      {" >> _worker.js
          echo "        status: 200," >> _worker.js
          echo "        headers: {" >> _worker.js
          echo "          'CF-IPCountry': 'US'," >> _worker.js
          echo "          'Content-Type': 'application/json'" >> _worker.js
          echo "        }" >> _worker.js
          echo "      }" >> _worker.js
          echo "    )" >> _worker.js
          echo "  }" >> _worker.js
          echo "}" >> _worker.js

      - name: 验证文件完整性
        run: |
          echo "=== 文件结构验证 ==="
          ls -la
          echo "=== Worker内容验证 ==="
          cat _worker.js
          echo "=== TOML配置验证 ==="
          cat wrangler.toml

      - name: 执行部署
        run: |
          wrangler deploy --config wrangler.toml
        env:
          CLOUDFLARE_API_TOKEN: ${{ secrets.CLOUDFLARE_API_TOKEN }}
          CF_WORKER_VERSION: v1.0-stable
