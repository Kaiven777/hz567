name: Cloudflare Worker 100% 成功部署

on:
  push:
    branches: [main]

jobs:
  deploy:
    runs-on: ubuntu-latest
    timeout-minutes: 10

    steps:
      - name: 检出代码
        uses: actions/checkout@v4

      - name: 设置Node.js环境
        uses: actions/setup-node@v4
        with:
          node-version: "20.x"

      - name: 安装必要工具
        run: npm install -g wrangler@4.6.0 javascript-obfuscator@4.0.2

      - name: 预验证配置 (关键修复)
        run: |
          # 检查密钥存在性（修复空值警告）
          if [ -z "${{ secrets.CLOUDFLARE_API_TOKEN }}" ]; then
            echo "::error::❌ 请在仓库Settings→Secrets→Actions中添加CLOUDFLARE_API_TOKEN"
            echo "::warning::访问 https://dash.cloudflare.com/profile/api-tokens 创建Token"
            exit 1
          fi

          if [ -z "${{ secrets.CLOUDFLARE_ACCOUNT_ID }}" ]; then
            echo "::error::❌ 请在仓库Settings→Secrets→Actions中添加CLOUDFLARE_ACCOUNT_ID"
            echo "::warning::账户ID在Cloudflare控制台右上角，形如：a1b2c3d4e5f6g7h8i9j0k1l2m3n4o5p"
            exit 1
          fi

          # 动态添加mask（修复空值警告）
          echo "CLOUDFLARE_API_TOKEN_EXISTS=${{ secrets.CLOUDFLARE_API_TOKEN != '' }}" >> $GITHUB_ENV
          echo "CLOUDFLARE_ACCOUNT_ID_EXISTS=${{ secrets.CLOUDFLARE_ACCOUNT_ID != '' }}" >> $GITHUB_ENV

      - name: 安全屏蔽敏感信息
        if: env.CLOUDFLARE_API_TOKEN_EXISTS == 'true' && env.CLOUDFLARE_ACCOUNT_ID_EXISTS == 'true'
        run: |
          echo "::add-mask::${{ secrets.CLOUDFLARE_API_TOKEN }}"
          echo "::add-mask::${{ secrets.CLOUDFLARE_ACCOUNT_ID }}"

      - name: 构建Worker文件
        run: |
          curl -sSf -o origin.js \
            "https://raw.githubusercontent.com/bia-pain-bache/BPB-Worker-Panel/main/build/unobfuscated-worker.js"
          
          npx javascript-obfuscator origin.js \
            --output _worker.js \
            --compact true \
            --rename-globals false \
            --reserved-names "addEventListener,fetch"

      - name: 部署到Cloudflare
        env:
          CLOUDFLARE_API_TOKEN: ${{ secrets.CLOUDFLARE_API_TOKEN }}
          CLOUDFLARE_ACCOUNT_ID: ${{ secrets.CLOUDFLARE_ACCOUNT_ID }}
        run: |
          wrangler deploy _worker.js \
            --name bpb-worker-$GITHUB_RUN_ID \
            --compatibility-date $(date +'%Y-%m-%d') \
            --account-id $CLOUDFLARE_ACCOUNT_ID
